ggplot(my_df, aes(factor(year), query_hits / refs_hits, group = query_id,
color = query_id)) +
geom_line(size = 1, alpha = 0.8) +
geom_point(size = 2) +
scale_color_brewer(name = "Query", palette = "Set1")+
xlab("Year published") +
ylab("Proportion of articles in Europe PMC")
my_df
hits_summary
install.packages("phytools")
library(phytools)
install.packages("phylotools")
library(phylotools)
install.packages("devtools")
library(devtools)
csvfilenames <- list.files("/home/bella/Dropbox/Master-Thesis/MA_Thesis_Program/Filtered_Data/CA1/Mean_Values",
pattern="*.csv", all.files=FALSE, full.names=FALSE)
for(i in 1:length(csvfilenames))
{
temp<-read.csv(paste(csvfilenames[i])) #give path if its not your wd
temp$filename_tag<-paste(csvfilenames[i])
list[[i]]<-temp
}
outfile<-as.data.frame(do.call(rbind,list))
list[[i]]<-temp
{
temp<-read.csv(paste(csvfilenames[i])) #give path if its not your wd
temp$filename_tag<-paste(csvfilenames[i])
list[[i]]<-temp
}
csvfilenames <- list.files("/home/bella/Dropbox/Master-Thesis/MA_Thesis_Program/Filtered_Data/CA1/Mean_Values",
pattern="*.csv", all.files=FALSE, full.names=FALSE)
for(i in 1:length(csvfilenames))
{
temp<-read.csv(paste(csvfilenames[i])) #give path if its not your wd
temp$filename_tag<-paste(csvfilenames[i])
list[[i]]<-temp
}
outfile<-as.data.frame(do.call(rbind,list))
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse", dependencies = TRUE)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
install.packages("~/R/x86_64-pc-linux-gnu-library/3.4/phylotools/R/phylotools", repos = NULL)
install.packages("ggtree")
install.packages("ggtree", dependencies = TRUE)
install.packages("devtools")
library(devtools)
install.packages("tidyverse")
library(tidyverse)
devtools::install_github("hadley/devtools")
installed.packages()
install.packages("devtools")
devtools::install_github("hadley/devtools")
install.packages("tidyverse", repos = "https://github.com/tidyverse/tidyverse")
tags <- c("ggplot2", "data.table", "plyr", "knitr", "shiny", "xts", "lattice")
pkgDep(tags, suggests = TRUE, enhances = FALSE, availPkgs = cranJuly2014)
library("miniCRAN")
install.packages("miniCRAN")
pkgDep(tags, suggests = TRUE, enhances = FALSE, availPkgs = cranJuly2014)
library("miniCRAN")
tree <- read.nexus("rom.nex")
library(ape)
library(ggtree)
library(phangorn)
library(ggplot2)
library(tidyverse)
install.packages("ggplot2", dependencies = TRUE)
library(ggplot2)
install.packages(
"ggplot2",
repos = c("http://rstudio.org/_packages",
"http://cran.rstudio.com")
)
.libPaths()
install.packages("ggplot2",
repos = c("http://rstudio.org/_packages",
"http://cran.rstudio.com"))
library("ape", lib.loc="/usr/local/lib/R/site-library")
remove.packages("ape", lib="/usr/local/lib/R/site-library")
library("yaml", lib.loc="/usr/local/lib/R/site-library")
remove.packages("yaml", lib="/usr/local/lib/R/site-library")
install.packages("ape")
ip <- as.data.frame(installed.packages())
head(ip)
# if you use MRO, make sure that no packages in this library will be removed
ip <- subset(ip, !grepl("MRO", ip$LibPath))
# we don't want to remove base or recommended packages either\
ip <- ip[!(ip[,"Priority"] %in% c("base", "recommended")),]
# determine the library where the packages are installed
path.lib <- unique(ip$LibPath)
# create a vector with all the names of the packages you want to remove
pkgs.to.remove <- ip[,1]
head(pkgs.to.remove)
# remove the packages
sapply(pkgs.to.remove, remove.packages, lib = path.lib)
library("tools")
removeDepends <- function(pkg, recursive = FALSE){
d <- package_dependencies(,installed.packages(), recursive = recursive)
depends <- if(!is.null(d[[pkg]])) d[[pkg]] else character()
needed <- unique(unlist(d[!names(d) %in% c(pkg,depends)]))
toRemove <- depends[!depends %in% needed]
if(length(toRemove)){
toRemove <- select.list(c(pkg,sort(toRemove)), multiple = TRUE,
title = "Select packages to remove")
remove.packages(toRemove)
return(toRemove)
} else {
invisible(character())
}
}
.libPaths()
.libPaths()
.libPaths()
install.packages("ggplot2")
library("ape", lib.loc="/usr/local/lib/R/site-library")
library("askpass", lib.loc="/usr/local/lib/R/site-library")
library("assertthat", lib.loc="/usr/local/lib/R/site-library")
library("backports", lib.loc="/usr/local/lib/R/site-library")
detach("package:backports", unload=TRUE)
detach("package:assertthat", unload=TRUE)
detach("package:askpass", unload=TRUE)
detach("package:ape", unload=TRUE)
install.packages("/tmp/Rtmp1SX5Rv/downloaded_packages/ggplot2_3.1.0.tar.gz", repos = NULL, type = "source")
install.packages("Rcpp")
library("yaml", lib.loc="/usr/local/lib/R/site-library")
remove.packages("yaml", lib="/usr/local/lib/R/site-library")
uninstall.packages("yaml")
.libPaths()
library("ggplot2", lib.loc="/usr/local/lib/R/site-library")
RUN Rscript -e "install.packages('devtools')"
library("ape", lib.loc="/usr/local/lib/R/site-library")
warnings()
install.packages("phytools",dependencies = TRUE)
install.packages("animation")
library(phytools)
install.packages("phytools")
library(clusterSim)
install.packages("clusterSim")
load("/tmp/mozilla_bella0/gabmap.Rdata")
load("/tmp/mozilla_bella0/gabmap.Rdata")
dfa <- load("/tmp/mozilla_bella0/gabmap.Rdata")
dfa
.libPaths()
setRepositories("/usr/lib/R/library")
.libPaths()
library("ape", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
trw <- fastme.bal(as.dist(table_nw))
library(ape)
citation("pkgname")
citation("R")
citation("ggplot")
citation("stats")
citation("ggmap")
citation("ape")
citation("ggplot2")
citation("phangorn")
citation("phangorn",bibtex=TRUE)
print(Schliep, K., Potts, A. J., Morrison, D. A., Grimm, G. W. (2017),
Intertwining phylogenetic trees and networks. Methods in Ecology and
Evolution, 8: 1212--1220. doi: 10.1111/2041-210X.12760, bibtex=TRUE)
print(citation("phangorn"), bibtex=TRUE)
print(citation("tidyverse"), bibtex=TRUE)
print(citation("ggridges"), bibtex=TRUE)
print(citation("factoextra"), bibtex=TRUE)
print(citation("cluster"), bibtex=TRUE)
print(citation("dplyr"), bibtex=TRUE)
print(citation("fitdistrplus"), bibtex=TRUE)
print(citation("logspline"), bibtex=TRUE)
print(citation("ggdendro"), bibtex=TRUE)
print(citation("heatmaply"), bibtex=TRUE)
library(lubridate)
?lubridate
?`lubridate-package`
print(citation("magrittr"), bibtex=TRUE)
print(citation("ggpubr"), bibtex=TRUE)
print(citation("fpc"), bibtex=TRUE)
?magrittr
library(sf)
library(raster)
library(dplyr)
library(spData)
library(spDataLarge)
install.packages(c("sf", "raster", "spData", "tmap", "leaflet", "mapview", "shiny"))
library(sf)
install.packages("sf")
library(sf)
install.packages("sf", dependencies = TRUE)
library(lingtypology)
map.feature(languages = c("Irish", "Danish", "Rusyn", "Bebe"))
map.feature(languages = c("Italian", "Piemontese", "Sicilian", "Ligurian"))
map.feature(languages = c("Asturian",
"Central Catalan",
"North-Western Catalan",
"Minorcan Catalan",
"Castello de la Plana Catalan",
"Valencia Catalan",
"Manises Catalan",
"Dalmatian",
"Ravennate Romagnol",
"Ferrarese Emiliano",
"Carpigiano Emiliano",
"Reggiano Emiliano",
"Standard French",
"Old French",
"Friulian",
"Galician",
"Standard Italian",
"Foligno Italian",
"Grosseto Italian",
"Old Italian",
"Late Classical Latin",
"Rapallo Ligurian",
"Genoese Ligurian",
"Stella Ligurian",
"Gardenese Ladin",
"Fassano Ladin",
"Bergamo Lombard",
"Plesio Lombard",
"Neapolitan",
"Picard",
"Lanzo Torinese Piemontese",
"Barbania Piemontese",
"Carmagnola Piemontese",
"Turinese Piemontese",
"Vercellese Piemontese",
"Standard Portuguese",
"Provencal Occitan",
"Savoyard Franco-Provencal",
"Archaic Latin",
"Rumantsch Grischun",
"Sursilvan Romansh",
"Surmiran Romansh",
"Vallader Romansh",
"Romanian",
"Istro Romanian",
"Aromanian",
"Megleno Romanian",
"Palermitan Sicilian",
"Messinese Sicilian",
"Catanian Sicilian",
"South-Eastern Sicilian",
"Castilian Spanish",
"Logudorese",
"Campidanese",
"Venice Venetian",
"Primiero Venetian",
"Bellunese Venetian",
"Walloon"))
#transpose dataframe to matrix
library(dplyr)
library(tidyverse)
setwd("/home/bella/Dropbox/Master-Thesis/MA_Thesis_Program/")
###transpose matrix into table
mat[lower.tri(mat, diag = TRUE)] <- NA
setwd("/home/bella/Dropbox/Master-Thesis/MA_Thesis_Program/R_stuff/")
tmp <- read.csv("dummy_matrix.csv", header=TRUE, sep=",", stringsAsFactors=FALSE)
###transpose matrix into table
tmp[lower.tri(tmp, diag = TRUE)] <- NA
na.omit(data.frame(as.table(tmp)))
NA
###transpose matrix into table
tmp[lower.tri(tmp, diag = TRUE)] <- wtf
wtf
###transpose matrix into table
tmp[lower.tri(tmp, diag = TRUE)] <- wtf
###transpose matrix into table
tmp[lower.tri(tmp, diag = TRUE)] <- wtf
###transpose matrix into table
tmp[lower.tri(tmp, diag = TRUE)] <- NA
na.omit(data.frame(as.table(tmp)))
as.table(tmp)
install.packages(c("ape", "phangorn", "tidyverse"))
